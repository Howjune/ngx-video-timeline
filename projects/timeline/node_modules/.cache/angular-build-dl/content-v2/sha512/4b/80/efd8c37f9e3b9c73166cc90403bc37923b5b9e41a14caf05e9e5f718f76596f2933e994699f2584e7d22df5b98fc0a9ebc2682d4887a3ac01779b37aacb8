{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./projects/timeline/src/lib/timeline.component.ts","./projects/timeline/src/lib/timeline.component.html","./projects/timeline/src/lib/timeline.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Input,\n    OnChanges,\n    OnInit,\n    Output, SimpleChanges,\n    ViewChild\n} from '@angular/core';\n\nimport * as moment from 'dayjs';\n\nimport { interval, Subscription } from 'rxjs';\n\nexport class DateUtil {\n\n    /**\n     * 日期格式为string\n     * @param date 日期\n     * @param format 格式参数\n     */\n    static formatDate(date: Date, format: string): string {\n        // return dateFormat(format, date);\n        return moment(date).format(format);\n    }\n\n}\nexport interface CanvasPos {\n    posX: number;\n    posY: number;\n}\n\nexport interface VideoCellStyleType {\n    background: string;\n}\n\nexport interface VideoCellType {\n    beginTime: number | string;\n    endTime: number | string;\n    style?: VideoCellStyleType;\n}\n\n\n@Component({\n    selector: 'ngx-video-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss']\n})\nexport class TimelineComponent implements OnInit, OnChanges {\n\n    // Canvas scale is adjusted according to outer height\n    private _scale = 20;\n    get scale(): number {\n        return (this.canvasHeight / 4.55);\n    }\n\n    // The height of the outer canvas\n    private _canvasHeight = 50;\n    get canvasHeight(): number {\n        return this._canvasHeight;\n    }\n\n    @Input()\n    set canvasHeight(value: number) {\n        this._canvasHeight = value;\n    }\n\n    // Video playback time\n    private _playTime = new Date().getTime();\n    get playTime(): number | string | Date {\n        return this._playTime;\n    }\n\n    @Input()\n    set playTime(value: number | string | Date) {\n        if (value instanceof String) {\n            this._playTime = new Date(value).getTime();\n        } else if (value instanceof Date) {\n            this._playTime = value.getTime();\n        } else if (typeof value === 'number') {\n            this._playTime = Number(value);\n        }\n    }\n\n    // The video plays at twice the speed\n    private _speed = 1;\n    get speed(): number {\n        return 1 / this._speed * 1000;\n    }\n\n    @Input()\n    set speed(value: number) {\n        this._speed = value;\n    }\n\n    // Video fast forward value\n    private _forWardValue = 5;\n    get forWardValue(): number {\n        return this._forWardValue * 1000;\n    }\n\n    @Input()\n    set forWardValue(value: number) {\n        this._forWardValue = value;\n    }\n\n    // Start time limit: Timestamp\n    private _startTimeThreshold = new Date().getTime() - 1 * 12 * 3600 * 1000;\n    get startTimeThreshold(): number | string | Date {\n        return this._startTimeThreshold;\n    }\n\n    @Input()\n    set startTimeThreshold(value: number | string | Date) {\n        if (value instanceof String) {\n            this._startTimeThreshold = new Date(value).getTime();\n        } else if (value instanceof Date) {\n            this._startTimeThreshold = value.getTime();\n        } else if (typeof value === 'number') {\n            this._startTimeThreshold = Number(value);\n        }\n    }\n\n    // End time limit: Timestamp\n    private _endTimeThreshold = new Date().getTime() + 1 * 12 * 3600 * 1000;\n    get endTimeThreshold(): number | string | Date {\n        return this._endTimeThreshold;\n    }\n\n    @Input()\n    set endTimeThreshold(value: number | string | Date) {\n        if (value instanceof String) {\n            this._endTimeThreshold = new Date(value).getTime();\n        } else if (value instanceof Date) {\n            this._endTimeThreshold = value.getTime();\n        } else if (typeof value === 'number') {\n            this._endTimeThreshold = Number(value);\n        }\n    }\n    // relation to Css Start\n\n    // color of canvas border\n    @Input() borderColor: string;\n\n    // color of canvas backgraound\n    @Input() bgColor: string;\n\n    // color of the bottomLine\n    @Input() bottomLineColor: string;\n\n    // color of the verticalBar\n    @Input() verticalBarColor: string;\n\n    // color of the playBar\n    @Input() playBarColor: string;\n\n\n    // relation to Css End\n\n    // Video clips\n    @Input() videoCells: Array<VideoCellType>;\n\n    // flag of click play button\n    @Input() isPlayClick: boolean;\n\n    // emit data when click playButton\n    @Output() readonly playClick: EventEmitter<any>;\n\n    // emit data when mouseUp\n    @Output() readonly mouseUp: EventEmitter<any>;\n\n    // emit data when mouseDown\n    @Output() readonly mouseDown: EventEmitter<any>;\n\n    // emit data when keyUp\n    @Output() readonly keyUp: EventEmitter<any>;\n\n    // emit data when keyDown\n    @Output() readonly keyDown: EventEmitter<any>;\n\n    // --- canvas data start ---//\n\n    // canvas box\n    canvas: any;\n\n    // canvas context\n    ctx: any;\n\n    // canvas width\n    canvasW: number;\n\n    // canvas height\n    canvasH: number;\n\n    // video clips in reality\n    timecell: Array<VideoCellType>;\n\n    // per minute stand for step\n    minutesPerStep: Array<number>;\n\n    // per minite stand for px\n    pxPerMs: number;\n\n    // Minimum width between scales, unit px\n    graduationStep: number;\n\n    // The timeline shows x hours\n    hoursPerRuler: number;\n\n    // The leftmost timestamp that appears -- the default is the first 12 hours\n    startTimestamp: number;\n\n    // current timestamp\n    currentTimestamp: number;\n\n    // Px two hours apart\n    distanceBetweenGtitle: number;\n\n    // zoom of canvas\n    zoom: number;\n\n    // marker of drag an unreleased mouse event\n    gIsMousedown: boolean;\n\n    // marker of drag the mouse move\n    gIsMousemove: boolean;\n\n    // The position of the X-axis when the mouse is pressed\n    gMousedownCursor = undefined;\n\n    // The position of the y-axis when the mouse is pressed\n    gMousedownCursorY = undefined;\n\n    // Time flow timer\n    setTimeMove: Subscription;\n\n    // The distance to the left of the play button\n    playBarDistanceLeft: number;\n\n    // Play the initial position of the icon\n    playBarOffsetX: number;\n\n    // Play the X-axis position 1 of the icon\n    playBarOffsetX1: number;\n\n    // Play the X-axis position 2 of the icon\n    playBarOffsetX2: number;\n\n    // Play the Y-axis position 1 of the icon\n    playBarOffsetY1: number;\n\n    // Play the Y-axis position 2 of the icon\n    playBarOffsetY2: number;\n\n    // --- canvas data end ---//\n\n    // elements of the timeline\n    @ViewChild('timeline', { static: true }) canvasExp: ElementRef;\n\n    constructor() {\n        // this.startTimeThreshold = new Date().getTime() - 1 * 0.5 * 3600 * 1000;\n        // this.endTimeThreshold = new Date().getTime() + 1 * 1 * 3600 * 1000;\n        this.playClick = new EventEmitter<any>();\n        this.mouseUp = new EventEmitter<any>();\n        this.mouseDown = new EventEmitter<any>();\n        this.keyUp = new EventEmitter<any>();\n        this.keyDown = new EventEmitter<any>();\n        this.isPlayClick = false;\n        this.videoCells = [\n            {\n                beginTime: new Date().getTime() - 3 * 3600 * 1000,\n                endTime: new Date().getTime() - 1 * 3600 * 1000,\n                style: {\n                    background: 'rgba(132, 244, 180, 0.498039)'\n                }\n            },\n            {\n                beginTime: new Date().getTime() - 6 * 3600 * 1000,\n                endTime: new Date().getTime() - 4 * 3600 * 1000,\n                style: {\n                    background: 'rgba(132, 244, 180, 0.498039)'\n                }\n            }\n        ];\n    }\n\n    /**\n     * Browser change event\n     */\n    @HostListener('window:resize', ['$event'])\n    onResize(): void {\n        this.canvas.width = Math.round(this.canvas.parentNode.offsetWidth - 2);\n        this.canvasW = this.canvas.parentNode.offsetWidth;\n        this.init(this.startTimestamp, this.timecell, false);\n    }\n\n    /**\n     * Keyboard press event\n     */\n    @HostListener('window:keydown', ['$event'])\n    onKeyDown(event: any): void {\n        if (Number(event.keyCode) === 37) {\n            this.playTime = Number(this.playTime) - this.forWardValue;\n            this.currentTimestamp = Number(this.currentTimestamp) - this.forWardValue;\n            this.set_time_to_middle(this.playTime);\n\n        } else if (Number(event.keyCode === 39)) {\n            this.playTime = Number(this.playTime) + this.forWardValue;\n            this.currentTimestamp = Number(this.currentTimestamp) + this.forWardValue;\n            this.set_time_to_middle(this.playTime);\n        }\n        this.keyDown.emit(this.playTime);\n    }\n\n    /**\n     * Keyboard release event\n     */\n    @HostListener('window:keyup', ['$event'])\n    onKeyUp(event: any): void {\n        if (Number(event.keyCode) === 13 || Number(event.keyCode === 32)) {\n            this.isPlayClick ? this.onPauseClick() : this.onPlayClick();\n        }\n        this.keyUp.emit(this.playTime);\n    }\n\n    ngOnInit(): void {\n        // Initialize data video group event stamp to show new Date().getTime()- number of hours\n\n        // Assign the Canvas DOM to the variable Canvas\n        this.canvas = this.canvasExp.nativeElement;\n\n        // Define the area of the canvas\n        this.ctx = this.canvas.getContext('2d');\n\n        // Redefine the width of the canvas. The default canvas is 300. Assign the width of the parent element\n        this.canvas.width = Math.round(this.canvas.parentNode.offsetWidth - 2);\n\n        // Store the width and height of the canvas\n        this.canvasW = this.canvas.width;\n        this.canvas.height = this.canvasHeight;\n        this.canvasH = this.canvas.height;\n\n        // Assign the video array to Timecell\n        this.timecell = this.videoCells;\n\n        // Initialize the number of steps per minute\n        this.minutesPerStep = [\n            1,\n            2,\n            5,\n            10,\n            15,\n            20,\n            30,\n            60,\n            120,\n            180,\n            240,\n            360,\n            720,\n            1440\n        ];\n\n        // Initialization style\n        this.verticalBarColor = 'rgba(0,0,0,1)';\n        this.bottomLineColor = 'rgba(0,0,0,1)';\n        this.borderColor = '#fff';\n        this.bgColor = '#fff';\n        this.playBarColor = '#448aff';\n\n        // Minimum width between scales, in units of px 20px\n        this.graduationStep = 20;\n\n        // The timeline shows the time rounded up according to the time threshold\n        this.hoursPerRuler = Math.ceil((Number(this.endTimeThreshold) - Number(this.startTimeThreshold)) / 1000 / 3600) < 24 ?\n            Math.ceil((Number(this.endTimeThreshold) - Number(this.startTimeThreshold)) / 1000 / 3600) :\n            24;\n\n        // The leftmost timestamp defaults to 12 hours before the current time\n        this.startTimestamp = Number(this.startTimeThreshold);\n\n        // Default distance 80\n        this.distanceBetweenGtitle = 80;\n        // Default zoom 24\n        this.zoom = 24;\n\n        // Default false\n        this.gIsMousedown = false;\n        this.gIsMousemove = false;\n        this.gMousedownCursor = undefined;\n\n        // px/ms\n        this.pxPerMs = this.canvasW / (this.hoursPerRuler * 3600 * 1000);\n\n        // The initial X position of the playback icon is in the middle of the scale\n        this.playBarOffsetX = this.canvasW / 2;\n\n        this.playBarDistanceLeft = this.playBarOffsetX / this.pxPerMs / 3600 / 1000 / this.hoursPerRuler;\n        this.currentTimestamp = this.startTimestamp + this.hoursPerRuler * this.playBarDistanceLeft * 3600 * 1000;\n\n        this.playBarOffsetX1 = this.playBarOffsetX - (this.scale * 0.6);\n        this.playBarOffsetX2 = this.playBarOffsetX + (this.scale * 0.6);\n        this.playBarOffsetY1 = (this.scale * 2.5);\n        this.playBarOffsetY2 = ((this.scale * 3.5));\n\n        // Initialize the timeline\n        this.init(this.startTimestamp, this.timecell, false);\n\n        // Draw the play button\n        this.drawPalyBar();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        // Refactor the playback component when the width and height change\n        if (changes.canvasHeight) {\n            this.canvasHeight = changes.canvasHeight.currentValue;\n\n            // Assign the Canvas DOM to the variable Canvas\n            this.canvas = this.canvasExp.nativeElement;\n\n            // Define the area of the canvas\n            this.ctx = this.canvas.getContext('2d');\n\n            // Redefine the width of the canvas. The default canvas is 300. Assign the width of the parent element\n            this.canvas.width = Math.round(this.canvas.parentNode.offsetWidth - 2);\n\n            // Store the width and height of the canvas\n            this.canvasW = this.canvas.width;\n\n            this.canvas.height = this.canvasHeight;\n            this.canvasH = this.canvas.height;\n\n            // Assign the video array to Timecell\n            this.timecell = this.videoCells;\n\n            this.minutesPerStep = [\n                1,\n                2,\n                5,\n                10,\n                15,\n                20,\n                30,\n                60,\n                120,\n                180,\n                240,\n                360,\n                720,\n                1440\n            ];\n            // The timeline shows the time rounded up according to the time threshold\n            this.hoursPerRuler = Math.ceil((Number(this.endTimeThreshold) - Number(this.startTimeThreshold)) / 1000 / 3600) < 24 ?\n                Math.ceil((Number(this.endTimeThreshold) - Number(this.startTimeThreshold)) / 1000 / 3600)\n                : 24;\n\n            // The leftmost timestamp defaults to 12 hours before the current time\n            this.startTimestamp = Number(this.startTimeThreshold);\n\n            this.pxPerMs = this.canvasW / (this.hoursPerRuler * 3600 * 1000);\n\n            // The initial X position of the playback icon is in the middle of the scale\n            this.playBarOffsetX = this.canvasW / 2;\n\n            this.playBarDistanceLeft = this.playBarOffsetX / this.pxPerMs / 3600 / 1000 / this.hoursPerRuler;\n            // Current timestamp\n            this.currentTimestamp = this.startTimestamp + this.hoursPerRuler * this.playBarDistanceLeft * 3600 * 1000;\n\n            this.playBarOffsetX1 = this.playBarOffsetX - (this.scale * 0.6);\n            this.playBarOffsetX2 = this.playBarOffsetX + (this.scale * 0.6);\n            this.playBarOffsetY1 = (this.scale * 2.5);\n            this.playBarOffsetY2 = ((this.scale * 3.5));\n\n            this.init(this.startTimestamp, this.timecell, false);\n            this.drawPalyBar();\n        }\n        if (changes.videoCells) {\n            this.videoCells = changes.videoCells.currentValue;\n\n            this.timecell = this.videoCells;\n            this.add_cells(this.timecell);\n\n            // this.init(this.startTimestamp, this.timecell, true);\n            // this.drawPalyBar();\n        }\n        if (changes.startTimeThreshold) {\n            this.startTimeThreshold = changes.startTimeThreshold.currentValue;\n\n            this.hoursPerRuler = Math.ceil((Number(this.endTimeThreshold) - Number(this.startTimeThreshold)) / 1000 / 3600) < 24\n                ? Math.ceil((Number(this.endTimeThreshold) - Number(this.startTimeThreshold)) / 1000 / 3600)\n                : 24;\n\n            this.startTimestamp = Number(this.startTimeThreshold);\n            // this.init(this.startTimestamp, this.timecell, false);\n        }\n        if (changes.endTimeThreshold) {\n            this.endTimeThreshold = changes.endTimeThreshold.currentValue;\n            this.hoursPerRuler = Math.ceil((Number(this.endTimeThreshold) - Number(this.startTimeThreshold)) / 1000 / 3600) < 24\n                ? Math.ceil((Number(this.endTimeThreshold) - Number(this.startTimeThreshold)) / 1000 / 3600)\n                : 24;\n\n        }\n        if (changes.playTime) {\n            this.playTime = changes.playTime.currentValue;\n\n            // use SetTimeOut Timer to make it  asynchronous\n            setTimeout(() => {\n                this.set_time_to_middle(new Date(this.playTime).getTime());\n            }, 100);\n\n        }\n        if (changes.speed) {\n\n            this.speed = changes.speed.currentValue;\n        }\n        if (changes.forWardValue) {\n\n            this.forWardValue = changes.forWardValue.currentValue;\n        }\n        if (changes.isPlayClick) {\n            if (changes.isPlayClick.currentValue) {\n                this.onPlayClick();\n            } else {\n                this.onPauseClick();\n            }\n        }\n    }\n\n    /**\n     * Initialize\n     * @param  startTimestamp Leftmost time\n     * @param  timecell Video segment array\n     * @param  redrawFlag Whether to redraw the mark\n     */\n    init(startTimestamp: number, timecell: any, redrawFlag: boolean): void {\n        this.timecell = timecell;\n        this.startTimestamp = startTimestamp;\n        if (\n            this.currentTimestamp >=\n            this.endTimeThreshold\n        ) {\n            this.startTimestamp =\n                Number(this.endTimeThreshold) -\n                (this.hoursPerRuler * this.playBarDistanceLeft * 1000 * 3600);\n            this.currentTimestamp =\n                Number(this.startTimestamp) + (this.hoursPerRuler * this.playBarDistanceLeft * 1000 * 3600);\n            this.playTime =\n                Number(this.startTimestamp) + (this.hoursPerRuler * this.playBarDistanceLeft * 1000 * 3600);\n        } else if (\n            this.currentTimestamp <=\n            this.startTimeThreshold\n        ) {\n            this.startTimestamp =\n                Number(this.startTimeThreshold) -\n                (this.hoursPerRuler * this.playBarDistanceLeft * 1000 * 3600);\n            this.currentTimestamp =\n                Number(this.startTimestamp) + (this.hoursPerRuler * this.playBarDistanceLeft * 1000 * 3600);\n            this.playTime =\n                Number(this.startTimestamp) + (this.hoursPerRuler * this.playBarDistanceLeft * 1000 * 3600);\n        }\n        this.drawCellBg();\n        this.add_graduations(startTimestamp);\n        this.add_cells(timecell);\n        // Draw the verticalBar\n        this.drawLine(\n            0,\n            this.canvasH,\n            this.canvasW,\n            this.canvasH,\n            this.bottomLineColor,\n            1\n        );\n    }\n\n    /**\n     * Draw add scale\n     * @param  startTimestamp Leftmost time\n     */\n    add_graduations(startTimestamp: number): void {\n        // px/min\n        const pxPerMin = this.canvasW / (this.hoursPerRuler * 60);\n        // px/ms\n        const pxPerMs = this.canvasW / (this.hoursPerRuler * 60 * 60 * 1000);\n        // The default minimum value of PX/steo is 20px\n        let pxPerStep = this.graduationStep;\n\n        // Min/steo\n        let minPerStep = pxPerStep / pxPerMin;\n\n        for (const v of this.minutesPerStep) {\n            if (minPerStep <= v) {\n                // Keep each cell within the range specified by minutesPerStep\n                minPerStep = v;\n                pxPerStep = pxPerMin * minPerStep;\n                break;\n            }\n        }\n        let mediumStep = 30;\n        for (const v of this.minutesPerStep) {\n            if (this.distanceBetweenGtitle / pxPerMin <= v) {\n                mediumStep = v;\n                break;\n            }\n        }\n        // The total number\n        const numSteps = this.canvasW / pxPerStep;\n\n        let graduationLeft: number;\n        let graduationTime: number;\n\n        let caretClass: string;\n        let lineH: number;\n\n        // The initial offset time (ms)\n        const msOffset = this.ms_to_next_step(\n            startTimestamp,\n            minPerStep * 60 * 1000\n        );\n\n        // The initial offset is (px)\n        const pxOffset = msOffset * pxPerMs;\n\n        // ms/step\n        const msPerStep = pxPerStep / pxPerMs;\n\n        for (let i = 0; i < numSteps; i++) {\n            // Distance = offset distance to start + steps *px/ steps\n            graduationLeft = pxOffset + i * pxPerStep;\n\n            // Time = left start time + offset time + steps *ms/ steps\n            graduationTime =\n                Number(startTimestamp) +\n                Number(msOffset) +\n                i * Number(msPerStep);\n\n            const date = new Date(graduationTime);\n            if (date.getUTCHours() === 0 && date.getUTCMinutes() === 0) {\n                caretClass = 'big';\n                lineH = (this.scale * 1.25);\n                const bigDate = DateUtil.formatDate(date, 'HH:mm:ss');\n                this.ctx.textAlign = 'center';\n                this.ctx.fillText(bigDate, graduationLeft, (this.scale * 1.5));\n                this.ctx.fillStyle = this.verticalBarColor;\n            } else if ((graduationTime / (60 * 1000)) % mediumStep === 0) {\n                caretClass = 'middle';\n                lineH = (this.scale * 0.75);\n                const middleDate = DateUtil.formatDate(date, 'HH:mm:ss');\n                this.ctx.textAlign = 'center';\n                this.ctx.fillText(middleDate, graduationLeft, (this.scale * 1.5));\n                this.ctx.fillStyle = this.verticalBarColor;\n            } else {\n                lineH = (this.scale * 0.5);\n            }\n            // drawLine(graduationLeft,0,graduationLeft,lineH,\"rgba(151,158,167,0.4)\",1);\n            this.drawLine(\n                graduationLeft,\n                0,\n                graduationLeft,\n                lineH,\n                this.verticalBarColor,\n                1\n            );\n        }\n    }\n\n    /**\n     * Draw the play button\n     */\n    drawPalyBar(): void {\n        this.ctx.beginPath();\n        this.ctx.moveTo(this.playBarOffsetX, 0);\n        this.ctx.lineTo(this.playBarOffsetX, (this.scale * 1.75));\n        this.ctx.strokeStyle = this.playBarColor;\n        this.ctx.stroke();\n        this.ctx.moveTo(this.playBarOffsetX, (this.scale * 1.75));\n        this.ctx.lineTo(this.playBarOffsetX, (this.scale * 1.75));\n        this.ctx.lineTo(this.playBarOffsetX - (this.scale * 0.6), (this.scale * 2.5));\n        this.ctx.lineTo(this.playBarOffsetX - (this.scale * 0.6), (this.scale * 3.5));\n        this.ctx.lineTo(this.playBarOffsetX + (this.scale * 0.6), (this.scale * 3.5));\n        this.ctx.lineTo(this.playBarOffsetX + (this.scale * 0.6), (this.scale * 2.5));\n        this.ctx.lineTo(this.playBarOffsetX, (this.scale * 1.75));\n        this.ctx.fillStyle = this.playBarColor;\n        this.ctx.fill();\n        this.ctx.closePath();\n        // this.init(this.startTimestamp, this.timecell, false);\n        const time = Number(this.currentTimestamp);\n        this.ctx.fillStyle = this.playBarColor;\n        this.ctx.textAlign = 'center';\n        this.ctx.fillText(\n            DateUtil.formatDate(new Date(time), 'YYYY-MM-DD HH:mm:ss'),\n            this.playBarOffsetX,\n            (this.scale * 4.25)\n        );\n    }\n\n    /**\n     * Draw the line\n     * @param  beginX The X-axis to start with\n     * @param  beginY The Y-axis to start with\n     * @param  endX The end of the X-axis\n     * @param  endY The end of the Y-axis\n     * @param  color color\n     * @param  width width\n     */\n    drawLine(\n        beginX: number,\n        beginY: number,\n        endX: number,\n        endY: number,\n        color: string,\n        width: number\n    ): void {\n        this.ctx.beginPath();\n        this.ctx.moveTo(beginX, beginY);\n        this.ctx.lineTo(endX, endY);\n        this.ctx.strokeStyle = color;\n        this.ctx.lineWidth = width;\n        this.ctx.stroke();\n    }\n\n    /**\n     * Add video segment\n     * @param  cells Video array\n     */\n    add_cells(cells: any): void {\n        cells.forEach((cell: MouseEvent) => {\n            this.draw_cell(cell);\n        });\n    }\n\n    /**\n     * Draw video blocks\n     * @param  cell The cell includes beginTime Ms; The endTime ms; style;\n     */\n    draw_cell(cell: any): void {\n        const pxPerMs = this.canvasW / (this.hoursPerRuler * 60 * 60 * 1000); // px/ms\n        const beginX = (cell.beginTime - this.startTimestamp) * pxPerMs;\n        const cellWidth = (cell.endTime - cell.beginTime) * pxPerMs;\n        this.ctx.fillStyle = cell.style.background;\n        this.ctx.fillRect(beginX, 0, cellWidth, (this.scale * 0.75));\n    }\n\n    /**\n     * Draws the background of the video block\n     */\n    drawCellBg(): void {\n        this.ctx.fillStyle = 'rgba(69, 72, 76, 0.5)';\n        this.ctx.fillRect(0, 0, this.canvasW, 0);\n    }\n\n    /**\n     * Drag/click the Mousedown event\n     */\n    mousedownFunc(e: MouseEvent): void {\n        this.gIsMousedown = true;\n        this.gMousedownCursor = this.get_cursor_x_position(e).posX;\n        this.gMousedownCursorY = this.get_cursor_x_position(e).posY;\n    }\n\n    /**\n     * Drag/mouse hover to display mousemove events\n     */\n    mousemoveFunc(e: MouseEvent): void {\n        this.clearCanvas();\n        const posX = this.get_cursor_x_position(e).posX;\n        const pxPerMs = this.canvasW / (this.hoursPerRuler * 3600 * 1000);\n        const diffX = posX - this.gMousedownCursor;\n        if (this.gIsMousedown) {\n            if (\n                this.gMousedownCursor >= this.playBarOffsetX1 &&\n                this.gMousedownCursor <= this.playBarOffsetX2 &&\n                this.gMousedownCursorY >= this.playBarOffsetY1 &&\n                this.gMousedownCursorY <= this.playBarOffsetY2\n            ) {\n                // this.playBarDistanceLeft = this.playBarOffsetX / this.pxPerMs / 3600 / 1000 / this.hoursPerRuler;\n                // this.playBarOffsetX = posX;\n                // this.playBarOffsetX1 = this.playBarOffsetX - (this.scale * 0.6);\n                // this.playBarOffsetX2 = this.playBarOffsetX + (this.scale * 0.6);\n\n                this.startTimestamp =\n                    this.startTimestamp + Math.round(diffX / pxPerMs);\n\n                this.currentTimestamp =\n                    (this.startTimestamp +\n                        Math.round(this.playBarOffsetX / pxPerMs));\n\n                this.drawPalyBar();\n                this.init(this.startTimestamp, this.timecell, false);\n\n                this.gIsMousemove = true;\n\n            } else {\n                this.startTimestamp =\n                    this.startTimestamp - Math.round(diffX / pxPerMs);\n\n                this.currentTimestamp =\n                    this.startTimestamp +\n                    Math.round(this.playBarOffsetX / pxPerMs);\n\n                this.drawPalyBar();\n                this.init(this.startTimestamp, this.timecell, true);\n\n                this.gIsMousemove = true;\n                this.gMousedownCursor = posX;\n\n            }\n            this.mouseUp.emit(this.currentTimestamp);\n\n        } else {\n\n            const time = this.startTimestamp + posX / pxPerMs;\n\n            this.drawPalyBar();\n            this.init(this.startTimestamp, this.timecell, true);\n            this.drawLine(posX, 0, posX, 50, 'rgb(194, 202, 215)', 1);\n\n            this.ctx.fillStyle = 'rgb(194, 202, 215)';\n            this.ctx.textAlign = 'center';\n            this.ctx.fillText(\n                DateUtil.formatDate(\n                    new Date(time),\n                    'YYYY-MM-DD HH:mm:ss'\n                ),\n                posX,\n                (this.scale * 3)\n            );\n\n        }\n    }\n\n    /**\n     * Drag/click the Mouseup event\n     */\n    mouseupFunc(e: MouseEvent): void {\n        if (this.gIsMousemove) {\n            // Drag events\n            this.gIsMousemove = false;\n            this.gIsMousedown = false;\n            this.playTime =\n                this.startTimestamp + this.hoursPerRuler * this.playBarDistanceLeft * 3600 * 1000;\n        } else {\n            // Click event\n            this.gIsMousedown = false;\n\n            // Mouse distance (px)\n            const posx = this.get_cursor_x_position(e).posX;\n\n            // ms/px\n            const msPerPx = (this.zoom * 3600 * 1000) / this.canvasW;\n\n            this.playTime = this.startTimestamp + posx * msPerPx;\n            this.set_time_to_middle(this.playTime);\n\n        }\n        this.mouseDown.emit(this.playTime);\n    }\n\n    /**\n     * Mouseout of the hidden time mouseout event\n     */\n    mouseoutFunc(): void {\n        this.clearCanvas();\n        // px/ms\n        const pxPerMs = this.canvasW / (this.hoursPerRuler * 3600 * 1000);\n        this.currentTimestamp =\n            this.startTimestamp +\n            Math.round(this.playBarOffsetX / pxPerMs);\n\n        this.drawPalyBar();\n        this.init(this.startTimestamp, this.timecell, true);\n    }\n\n    /**\n     * Scroll to the center of the timeline for the mousewheel event\n     */\n    mousewheelFunc(event: any): boolean {\n        if (event && event.preventDefault) {\n            event.preventDefault();\n        } else {\n            window.event.returnValue = false;\n            return false;\n        }\n\n        const e = window.event || event;\n        const delta = Math.max(-1, Math.min(1, e.wheelDelta || -e.detail));\n\n        // Ms Remember the current middle time\n        const middleTime =\n            this.startTimestamp + (this.hoursPerRuler * this.playBarDistanceLeft * 3600 * 1000);\n        if (delta < 0) {\n            this.zoom = this.zoom + 4;\n            if (this.zoom >= 24) {\n                // Shrink to a minimum of 24 hours\n                this.zoom = 24;\n            }\n            this.hoursPerRuler = this.zoom;\n        } else if (delta > 0) {\n            // amplification\n            this.zoom = this.zoom - 4;\n            if (this.zoom <= 1) {\n                // Zoom in at most one hour\n                this.zoom = 1;\n            }\n            this.hoursPerRuler = this.zoom;\n        }\n\n        this.clearCanvas();\n        // // startTimestamp = current middle time - zoom /2\n        this.startTimestamp =\n            middleTime - (this.hoursPerRuler * 3600 * 1000) / 2;\n\n        this.init(this.startTimestamp, this.timecell, true);\n        this.drawPalyBar();\n    }\n\n    /**\n     * Get the mouse POSx\n     * @param  e event\n     */\n    get_cursor_x_position(e: any): CanvasPos {\n        let posx = 0;\n        let posy = 0;\n\n        if (!e) {\n            e = window.event;\n        }\n        if (e.offsetX || e.offsetY) {\n            posx = e.offsetX;\n            posy = e.offsetY;\n        }\n\n        return { posX: posx, posY: posy };\n    }\n\n    /**\n     * The offset of the left start time, returns the unit ms\n     * @param  timestamp The time stamp\n     * @param  step The offset\n     */\n    ms_to_next_step(timestamp: number, step: number): number {\n        const remainder = timestamp % step;\n        return remainder ? step - remainder : 0;\n    }\n\n    /**\n     * Set the time to jump to the middle red line\n     *  @param  time Unit of ms\n     */\n    set_time_to_middle(time: number): void {\n        if (this.ctx) {\n            this.clearCanvas();\n            this.startTimestamp = time - (this.hoursPerRuler * this.playBarDistanceLeft * 3600 * 1000);\n            this.currentTimestamp = time;\n            this.drawPalyBar();\n            this.init(this.startTimestamp, this.timecell, true);\n        }\n    }\n\n    /**\n     * 清除canvas 每次重新绘制需要先清除\n     */\n    clearCanvas(): void {\n        this.ctx.clearRect(0, 0, this.canvasW, (this.scale * 7.5));\n    }\n    /**\n     * Click to play\n     */\n\n    onPlayClick(): void {\n        // this.setTimeMove = undefined;\n        this.isPlayClick = true;\n        this.setTimeMove = interval(this.speed).subscribe((d: any) => {\n            this.playTime = Number(this.playTime) + 1 * 1000;\n            this.playClick.emit(this.playTime);\n            this.set_time_to_middle(this.playTime);\n        });\n    }\n    /**\n     * Click on the pause\n     */\n    onPauseClick(): void {\n        this.isPlayClick = false;\n        if (this.setTimeMove) {\n            // this.setTimeMove = undefined;\n            this.setTimeMove.unsubscribe();\n            this.playClick.emit(this.playTime);\n        }\n    }\n    /**\n     * Change video segment\n     */\n    changeVideo(): void {\n        const cells: Array<VideoCellType> = [\n            {\n                beginTime: new Date().getTime() - 1 * 1000 * 3600,\n                endTime: new Date().getTime() + 2 * 1000 * 3600,\n                style: {\n                    background: 'rgba(132, 244, 180, 0.498039)'\n                }\n            }\n        ];\n        this.clearCanvas();\n        this.drawPalyBar();\n        this.init(this.startTimestamp, cells, true);\n    }\n\n    /**\n     * Temporary unused\n     * @param event MatDatepickerInputEvent(Date)\n     */\n    selectedTime(event: any): void {\n        const timestamp = new Date(event.value.getTime());\n        this.set_time_to_middle(Number(timestamp));\n    }\n\n    /**\n     * Temporary unused\n     * @param event MouseEvent\n     */\n    onDragStart(e: MouseEvent): boolean {\n        e.preventDefault();\n        return false;\n    }\n\n\n}\n","<canvas #timeline class=\"canvas\" style=\"cursor: pointer;border:1px solid borderColor;background-color: bgColor;\"\n    (dragstart)=\"onDragStart($event)\" (mouseup)=\"mouseupFunc($event)\" (mousewheel)=\"mousewheelFunc($event)\"\n    (mousedown)=\"mousedownFunc($event)\" (mousemove)=\"mousemoveFunc($event)\" (mouseout)=\"mouseoutFunc()\"></canvas>","import { NgModule } from '@angular/core';\nimport { TimelineComponent } from './timeline.component';\n\n\n\n@NgModule({\n    declarations: [TimelineComponent],\n    imports: [\n    ],\n    exports: [TimelineComponent]\n})\nexport class TimelineModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { VideoCellType } from 'projects/timeline/src/lib/timeline.component';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n    title = 'ngx-video-timeline';\n\n    speed: number;\n    canvasHeight: number;\n    startTimeThreshold: number;\n    endTimeThreshold: number;\n    videoCells: VideoCellType[];\n    playTime: Date;\n    isPlayClick: boolean;\n\n    constructor() {\n        this.speed = 10;\n        this.isPlayClick = false;\n        this.canvasHeight = 80;\n        this.startTimeThreshold = new Date().getTime() - 1 * 3600 * 1000;\n        this.endTimeThreshold = new Date().getTime() + 1 * 3600 * 1000;\n        this.videoCells = [];\n        this.playTime = new Date();\n    }\n\n    onPlay(): void {\n\n        this.isPlayClick = true;\n        this.startTimeThreshold = new Date().getTime() - 1 * 3600 * 1000;\n    }\n\n    onPause(): void {\n\n        this.isPlayClick = false;\n        // this.endTimeThreshold = new Date().getTime() + 1 * 3600 * 1000;\n    }\n\n    onPlayClick(date: number): void {\n        // console.log(new Date(date));\n        // this.canvasHeight = 60;\n    }\n\n\n    selectedTime(date: any): void {\n        this.playTime = date.value;\n    }\n\n    changeVideo(): void {\n        this.videoCells = [\n            {\n                beginTime: new Date().getTime() - 1 * 3600 * 1000,\n                endTime: new Date().getTime() + 1 * 3600 * 1000,\n                style: {\n                    background: '#f3e5e4'\n                }\n            }\n        ];\n    }\n\n    ngOnInit(): void {\n    }\n}\n","\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\"  class=\"canvas-box\">\n              <ngx-video-timeline class=\"canvas-class\" [playTime]=\"playTime\" [isPlayClick]=\"isPlayClick\"  [videoCells]=\"videoCells\" [startTimeThreshold]=\"startTimeThreshold\" [endTimeThreshold]=\"endTimeThreshold\"  [canvasHeight]=\"canvasHeight\"  [speed]=\"speed\" (playClick)=\"onPlayClick($event)\" ></ngx-video-timeline>\n          </div>\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n              <div>\n                  <button mat-button (click)=\"onPlay()\">play</button>\n                  <button mat-button (click)=\"onPause()\">pause</button>\n                  <button mat-button (click)=\"changeVideo()\">changeVideos</button>\n                  <!-- <mat-form-field>\n                      <input matInput [matDatepicker]=\"picker\" placeholder=\"选择时间\" (dateChange)=\"selectedTime($event)\">\n                      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                      <mat-datepicker #picker></mat-datepicker>\n                  </mat-form-field> -->\n              </div>\n\n          </div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { TimelineModule } from 'projects/timeline/src/lib/timeline.module';\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        BrowserModule,\n        TimelineModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}