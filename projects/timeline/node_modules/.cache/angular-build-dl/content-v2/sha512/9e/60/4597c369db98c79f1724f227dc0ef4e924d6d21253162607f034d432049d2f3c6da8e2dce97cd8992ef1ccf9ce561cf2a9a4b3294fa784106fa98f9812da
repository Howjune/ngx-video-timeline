{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///projects/timeline/src/lib/timeline.component.ts","webpack:///projects/timeline/src/lib/timeline.component.html","webpack:///projects/timeline/src/lib/timeline.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","DateUtil","date","format","TimelineComponent","_scale","_canvasHeight","_playTime","Date","getTime","_speed","_forWardValue","_startTimeThreshold","_endTimeThreshold","gMousedownCursor","undefined","gMousedownCursorY","playClick","mouseUp","mouseDown","keyUp","keyDown","isPlayClick","videoCells","beginTime","endTime","style","background","canvas","width","Math","round","parentNode","offsetWidth","canvasW","init","startTimestamp","timecell","event","Number","keyCode","playTime","forWardValue","currentTimestamp","set_time_to_middle","emit","onPauseClick","onPlayClick","canvasExp","nativeElement","ctx","getContext","height","canvasHeight","canvasH","minutesPerStep","verticalBarColor","bottomLineColor","borderColor","bgColor","playBarColor","graduationStep","hoursPerRuler","ceil","endTimeThreshold","startTimeThreshold","distanceBetweenGtitle","zoom","gIsMousedown","gIsMousemove","pxPerMs","playBarOffsetX","playBarDistanceLeft","playBarOffsetX1","scale","playBarOffsetX2","playBarOffsetY1","playBarOffsetY2","drawPalyBar","changes","currentValue","add_cells","setTimeout","speed","redrawFlag","drawCellBg","add_graduations","drawLine","pxPerMin","pxPerStep","minPerStep","v","mediumStep","numSteps","graduationLeft","graduationTime","caretClass","lineH","msOffset","ms_to_next_step","pxOffset","msPerStep","i","getUTCHours","getUTCMinutes","bigDate","formatDate","textAlign","fillText","fillStyle","middleDate","beginPath","moveTo","lineTo","strokeStyle","stroke","fill","closePath","time","beginX","beginY","endX","endY","color","lineWidth","cells","forEach","cell","draw_cell","cellWidth","fillRect","get_cursor_x_position","posX","posY","clearCanvas","diffX","posx","msPerPx","preventDefault","window","returnValue","delta","max","min","wheelDelta","detail","middleTime","posy","offsetX","offsetY","timestamp","step","remainder","clearRect","setTimeMove","subscribe","d","unsubscribe","value","String","onDragStart","mouseupFunc","mousewheelFunc","mousedownFunc","mousemoveFunc","mouseoutFunc","selector","templateUrl","styleUrls","TimelineModule","declarations","imports","AppComponent","title","onPlay","onPause","changeVideo","AppModule","providers","bootstrap","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Input,\n    OnChanges,\n    OnInit,\n    Output, SimpleChanges,\n    ViewChild\n} from '@angular/core';\n\nimport * as moment from 'dayjs';\n\nimport { interval, Subscription } from 'rxjs';\n\nexport class DateUtil {\n\n    /**\n     * 日期格式为string\n     * @param date 日期\n     * @param format 格式参数\n     */\n    static formatDate(date: Date, format: string): string {\n        // return dateFormat(format, date);\n        return moment(date).format(format);\n    }\n\n}\nexport interface CanvasPos {\n    posX: number;\n    posY: number;\n}\n\nexport interface VideoCellStyleType {\n    background: string;\n}\n\nexport interface VideoCellType {\n    beginTime: number | string;\n    endTime: number | string;\n    style?: VideoCellStyleType;\n}\n\n\n@Component({\n    selector: 'ngx-video-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss']\n})\nexport class TimelineComponent implements OnInit, OnChanges {\n\n    // Canvas scale is adjusted according to outer height\n    private _scale = 20;\n    get scale(): number {\n        return (this.canvasHeight / 4.55);\n    }\n\n    // The height of the outer canvas\n    private _canvasHeight = 50;\n    get canvasHeight(): number {\n        return this._canvasHeight;\n    }\n\n    @Input()\n    set canvasHeight(value: number) {\n        this._canvasHeight = value;\n    }\n\n    // Video playback time\n    private _playTime = new Date().getTime();\n    get playTime(): number | string | Date {\n        return this._playTime;\n    }\n\n    @Input()\n    set playTime(value: number | string | Date) {\n        if (value instanceof String) {\n            this._playTime = new Date(value).getTime();\n        } else if (value instanceof Date) {\n            this._playTime = value.getTime();\n        } else if (typeof value === 'number') {\n            this._playTime = Number(value);\n        }\n    }\n\n    // The video plays at twice the speed\n    private _speed = 1;\n    get speed(): number {\n        return 1 / this._speed * 1000;\n    }\n\n    @Input()\n    set speed(value: number) {\n        this._speed = value;\n    }\n\n    // Video fast forward value\n    private _forWardValue = 5;\n    get forWardValue(): number {\n        return this._forWardValue * 1000;\n    }\n\n    @Input()\n    set forWardValue(value: number) {\n        this._forWardValue = value;\n    }\n\n    // Start time limit: Timestamp\n    private _startTimeThreshold = new Date().getTime() - 1 * 12 * 3600 * 1000;\n    get startTimeThreshold(): number | string | Date {\n        return this._startTimeThreshold;\n    }\n\n    @Input()\n    set startTimeThreshold(value: number | string | Date) {\n        if (value instanceof String) {\n            this._startTimeThreshold = new Date(value).getTime();\n        } else if (value instanceof Date) {\n            this._startTimeThreshold = value.getTime();\n        } else if (typeof value === 'number') {\n            this._startTimeThreshold = Number(value);\n        }\n    }\n\n    // End time limit: Timestamp\n    private _endTimeThreshold = new Date().getTime() + 1 * 12 * 3600 * 1000;\n    get endTimeThreshold(): number | string | Date {\n        return this._endTimeThreshold;\n    }\n\n    @Input()\n    set endTimeThreshold(value: number | string | Date) {\n        if (value instanceof String) {\n            this._endTimeThreshold = new Date(value).getTime();\n        } else if (value instanceof Date) {\n            this._endTimeThreshold = value.getTime();\n        } else if (typeof value === 'number') {\n            this._endTimeThreshold = Number(value);\n        }\n    }\n    // relation to Css Start\n\n    // color of canvas border\n    @Input() borderColor: string;\n\n    // color of canvas backgraound\n    @Input() bgColor: string;\n\n    // color of the bottomLine\n    @Input() bottomLineColor: string;\n\n    // color of the verticalBar\n    @Input() verticalBarColor: string;\n\n    // color of the playBar\n    @Input() playBarColor: string;\n\n\n    // relation to Css End\n\n    // Video clips\n    @Input() videoCells: Array<VideoCellType>;\n\n    // flag of click play button\n    @Input() isPlayClick: boolean;\n\n    // emit data when click playButton\n    @Output() readonly playClick: EventEmitter<any>;\n\n    // emit data when mouseUp\n    @Output() readonly mouseUp: EventEmitter<any>;\n\n    // emit data when mouseDown\n    @Output() readonly mouseDown: EventEmitter<any>;\n\n    // emit data when keyUp\n    @Output() readonly keyUp: EventEmitter<any>;\n\n    // emit data when keyDown\n    @Output() readonly keyDown: EventEmitter<any>;\n\n    // --- canvas data start ---//\n\n    // canvas box\n    canvas: any;\n\n    // canvas context\n    ctx: any;\n\n    // canvas width\n    canvasW: number;\n\n    // canvas height\n    canvasH: number;\n\n    // video clips in reality\n    timecell: Array<VideoCellType>;\n\n    // per minute stand for step\n    minutesPerStep: Array<number>;\n\n    // per minite stand for px\n    pxPerMs: number;\n\n    // Minimum width between scales, unit px\n    graduationStep: number;\n\n    // The timeline shows x hours\n    hoursPerRuler: number;\n\n    // The leftmost timestamp that appears -- the default is the first 12 hours\n    startTimestamp: number;\n\n    // current timestamp\n    currentTimestamp: number;\n\n    // Px two hours apart\n    distanceBetweenGtitle: number;\n\n    // zoom of canvas\n    zoom: number;\n\n    // marker of drag an unreleased mouse event\n    gIsMousedown: boolean;\n\n    // marker of drag the mouse move\n    gIsMousemove: boolean;\n\n    // The position of the X-axis when the mouse is pressed\n    gMousedownCursor = undefined;\n\n    // The position of the y-axis when the mouse is pressed\n    gMousedownCursorY = undefined;\n\n    // Time flow timer\n    setTimeMove: Subscription;\n\n    // The distance to the left of the play button\n    playBarDistanceLeft: number;\n\n    // Play the initial position of the icon\n    playBarOffsetX: number;\n\n    // Play the X-axis position 1 of the icon\n    playBarOffsetX1: number;\n\n    // Play the X-axis position 2 of the icon\n    playBarOffsetX2: number;\n\n    // Play the Y-axis position 1 of the icon\n    playBarOffsetY1: number;\n\n    // Play the Y-axis position 2 of the icon\n    playBarOffsetY2: number;\n\n    // --- canvas data end ---//\n\n    // elements of the timeline\n    @ViewChild('timeline', { static: true }) canvasExp: ElementRef;\n\n    constructor() {\n        // this.startTimeThreshold = new Date().getTime() - 1 * 0.5 * 3600 * 1000;\n        // this.endTimeThreshold = new Date().getTime() + 1 * 1 * 3600 * 1000;\n        this.playClick = new EventEmitter<any>();\n        this.mouseUp = new EventEmitter<any>();\n        this.mouseDown = new EventEmitter<any>();\n        this.keyUp = new EventEmitter<any>();\n        this.keyDown = new EventEmitter<any>();\n        this.isPlayClick = false;\n        this.videoCells = [\n            {\n                beginTime: new Date().getTime() - 3 * 3600 * 1000,\n                endTime: new Date().getTime() - 1 * 3600 * 1000,\n                style: {\n                    background: 'rgba(132, 244, 180, 0.498039)'\n                }\n            },\n            {\n                beginTime: new Date().getTime() - 6 * 3600 * 1000,\n                endTime: new Date().getTime() - 4 * 3600 * 1000,\n                style: {\n                    background: 'rgba(132, 244, 180, 0.498039)'\n                }\n            }\n        ];\n    }\n\n    /**\n     * Browser change event\n     */\n    @HostListener('window:resize', ['$event'])\n    onResize(): void {\n        this.canvas.width = Math.round(this.canvas.parentNode.offsetWidth - 2);\n        this.canvasW = this.canvas.parentNode.offsetWidth;\n        this.init(this.startTimestamp, this.timecell, false);\n    }\n\n    /**\n     * Keyboard press event\n     */\n    @HostListener('window:keydown', ['$event'])\n    onKeyDown(event: any): void {\n        if (Number(event.keyCode) === 37) {\n            this.playTime = Number(this.playTime) - this.forWardValue;\n            this.currentTimestamp = Number(this.currentTimestamp) - this.forWardValue;\n            this.set_time_to_middle(this.playTime);\n\n        } else if (Number(event.keyCode === 39)) {\n            this.playTime = Number(this.playTime) + this.forWardValue;\n            this.currentTimestamp = Number(this.currentTimestamp) + this.forWardValue;\n            this.set_time_to_middle(this.playTime);\n        }\n        this.keyDown.emit(this.playTime);\n    }\n\n    /**\n     * Keyboard release event\n     */\n    @HostListener('window:keyup', ['$event'])\n    onKeyUp(event: any): void {\n        if (Number(event.keyCode) === 13 || Number(event.keyCode === 32)) {\n            this.isPlayClick ? this.onPauseClick() : this.onPlayClick();\n        }\n        this.keyUp.emit(this.playTime);\n    }\n\n    ngOnInit(): void {\n        // Initialize data video group event stamp to show new Date().getTime()- number of hours\n\n        // Assign the Canvas DOM to the variable Canvas\n        this.canvas = this.canvasExp.nativeElement;\n\n        // Define the area of the canvas\n        this.ctx = this.canvas.getContext('2d');\n\n        // Redefine the width of the canvas. The default canvas is 300. Assign the width of the parent element\n        this.canvas.width = Math.round(this.canvas.parentNode.offsetWidth - 2);\n\n        // Store the width and height of the canvas\n        this.canvasW = this.canvas.width;\n        this.canvas.height = this.canvasHeight;\n        this.canvasH = this.canvas.height;\n\n        // Assign the video array to Timecell\n        this.timecell = this.videoCells;\n\n        // Initialize the number of steps per minute\n        this.minutesPerStep = [\n            1,\n            2,\n            5,\n            10,\n            15,\n            20,\n            30,\n            60,\n            120,\n            180,\n            240,\n            360,\n            720,\n            1440\n        ];\n\n        // Initialization style\n        this.verticalBarColor = 'rgba(0,0,0,1)';\n        this.bottomLineColor = 'rgba(0,0,0,1)';\n        this.borderColor = '#fff';\n        this.bgColor = '#fff';\n        this.playBarColor = '#448aff';\n\n        // Minimum width between scales, in units of px 20px\n        this.graduationStep = 20;\n\n        // The timeline shows the time rounded up according to the time threshold\n        this.hoursPerRuler = Math.ceil((Number(this.endTimeThreshold) - Number(this.startTimeThreshold)) / 1000 / 3600) < 24 ?\n            Math.ceil((Number(this.endTimeThreshold) - Number(this.startTimeThreshold)) / 1000 / 3600) :\n            24;\n\n        // The leftmost timestamp defaults to 12 hours before the current time\n        this.startTimestamp = Number(this.startTimeThreshold);\n\n        // Default distance 80\n        this.distanceBetweenGtitle = 80;\n        // Default zoom 24\n        this.zoom = 24;\n\n        // Default false\n        this.gIsMousedown = false;\n        this.gIsMousemove = false;\n        this.gMousedownCursor = undefined;\n\n        // px/ms\n        this.pxPerMs = this.canvasW / (this.hoursPerRuler * 3600 * 1000);\n\n        // The initial X position of the playback icon is in the middle of the scale\n        this.playBarOffsetX = this.canvasW / 2;\n\n        this.playBarDistanceLeft = this.playBarOffsetX / this.pxPerMs / 3600 / 1000 / this.hoursPerRuler;\n        this.currentTimestamp = this.startTimestamp + this.hoursPerRuler * this.playBarDistanceLeft * 3600 * 1000;\n\n        this.playBarOffsetX1 = this.playBarOffsetX - (this.scale * 0.6);\n        this.playBarOffsetX2 = this.playBarOffsetX + (this.scale * 0.6);\n        this.playBarOffsetY1 = (this.scale * 2.5);\n        this.playBarOffsetY2 = ((this.scale * 3.5));\n\n        // Initialize the timeline\n        this.init(this.startTimestamp, this.timecell, false);\n\n        // Draw the play button\n        this.drawPalyBar();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        // Refactor the playback component when the width and height change\n        if (changes.canvasHeight) {\n            this.canvasHeight = changes.canvasHeight.currentValue;\n\n            // Assign the Canvas DOM to the variable Canvas\n            this.canvas = this.canvasExp.nativeElement;\n\n            // Define the area of the canvas\n            this.ctx = this.canvas.getContext('2d');\n\n            // Redefine the width of the canvas. The default canvas is 300. Assign the width of the parent element\n            this.canvas.width = Math.round(this.canvas.parentNode.offsetWidth - 2);\n\n            // Store the width and height of the canvas\n            this.canvasW = this.canvas.width;\n\n            this.canvas.height = this.canvasHeight;\n            this.canvasH = this.canvas.height;\n\n            // Assign the video array to Timecell\n            this.timecell = this.videoCells;\n\n            this.minutesPerStep = [\n                1,\n                2,\n                5,\n                10,\n                15,\n                20,\n                30,\n                60,\n                120,\n                180,\n                240,\n                360,\n                720,\n                1440\n            ];\n            // The timeline shows the time rounded up according to the time threshold\n            this.hoursPerRuler = Math.ceil((Number(this.endTimeThreshold) - Number(this.startTimeThreshold)) / 1000 / 3600) < 24 ?\n                Math.ceil((Number(this.endTimeThreshold) - Number(this.startTimeThreshold)) / 1000 / 3600)\n                : 24;\n\n            // The leftmost timestamp defaults to 12 hours before the current time\n            this.startTimestamp = Number(this.startTimeThreshold);\n\n            this.pxPerMs = this.canvasW / (this.hoursPerRuler * 3600 * 1000);\n\n            // The initial X position of the playback icon is in the middle of the scale\n            this.playBarOffsetX = this.canvasW / 2;\n\n            this.playBarDistanceLeft = this.playBarOffsetX / this.pxPerMs / 3600 / 1000 / this.hoursPerRuler;\n            // Current timestamp\n            this.currentTimestamp = this.startTimestamp + this.hoursPerRuler * this.playBarDistanceLeft * 3600 * 1000;\n\n            this.playBarOffsetX1 = this.playBarOffsetX - (this.scale * 0.6);\n            this.playBarOffsetX2 = this.playBarOffsetX + (this.scale * 0.6);\n            this.playBarOffsetY1 = (this.scale * 2.5);\n            this.playBarOffsetY2 = ((this.scale * 3.5));\n\n            this.init(this.startTimestamp, this.timecell, false);\n            this.drawPalyBar();\n        }\n        if (changes.videoCells) {\n            this.videoCells = changes.videoCells.currentValue;\n\n            this.timecell = this.videoCells;\n            this.add_cells(this.timecell);\n\n            // this.init(this.startTimestamp, this.timecell, true);\n            // this.drawPalyBar();\n        }\n        if (changes.startTimeThreshold) {\n            this.startTimeThreshold = changes.startTimeThreshold.currentValue;\n\n            this.hoursPerRuler = Math.ceil((Number(this.endTimeThreshold) - Number(this.startTimeThreshold)) / 1000 / 3600) < 24\n                ? Math.ceil((Number(this.endTimeThreshold) - Number(this.startTimeThreshold)) / 1000 / 3600)\n                : 24;\n\n            this.startTimestamp = Number(this.startTimeThreshold);\n            // this.init(this.startTimestamp, this.timecell, false);\n        }\n        if (changes.endTimeThreshold) {\n            this.endTimeThreshold = changes.endTimeThreshold.currentValue;\n            this.hoursPerRuler = Math.ceil((Number(this.endTimeThreshold) - Number(this.startTimeThreshold)) / 1000 / 3600) < 24\n                ? Math.ceil((Number(this.endTimeThreshold) - Number(this.startTimeThreshold)) / 1000 / 3600)\n                : 24;\n\n        }\n        if (changes.playTime) {\n            this.playTime = changes.playTime.currentValue;\n\n            // use SetTimeOut Timer to make it  asynchronous\n            setTimeout(() => {\n                this.set_time_to_middle(new Date(this.playTime).getTime());\n            }, 100);\n\n        }\n        if (changes.speed) {\n\n            this.speed = changes.speed.currentValue;\n        }\n        if (changes.forWardValue) {\n\n            this.forWardValue = changes.forWardValue.currentValue;\n        }\n        if (changes.isPlayClick) {\n            if (changes.isPlayClick.currentValue) {\n                this.onPlayClick();\n            } else {\n                this.onPauseClick();\n            }\n        }\n    }\n\n    /**\n     * Initialize\n     * @param  startTimestamp Leftmost time\n     * @param  timecell Video segment array\n     * @param  redrawFlag Whether to redraw the mark\n     */\n    init(startTimestamp: number, timecell: any, redrawFlag: boolean): void {\n        this.timecell = timecell;\n        this.startTimestamp = startTimestamp;\n        if (\n            this.currentTimestamp >=\n            this.endTimeThreshold\n        ) {\n            this.startTimestamp =\n                Number(this.endTimeThreshold) -\n                (this.hoursPerRuler * this.playBarDistanceLeft * 1000 * 3600);\n            this.currentTimestamp =\n                Number(this.startTimestamp) + (this.hoursPerRuler * this.playBarDistanceLeft * 1000 * 3600);\n            this.playTime =\n                Number(this.startTimestamp) + (this.hoursPerRuler * this.playBarDistanceLeft * 1000 * 3600);\n        } else if (\n            this.currentTimestamp <=\n            this.startTimeThreshold\n        ) {\n            this.startTimestamp =\n                Number(this.startTimeThreshold) -\n                (this.hoursPerRuler * this.playBarDistanceLeft * 1000 * 3600);\n            this.currentTimestamp =\n                Number(this.startTimestamp) + (this.hoursPerRuler * this.playBarDistanceLeft * 1000 * 3600);\n            this.playTime =\n                Number(this.startTimestamp) + (this.hoursPerRuler * this.playBarDistanceLeft * 1000 * 3600);\n        }\n        this.drawCellBg();\n        this.add_graduations(startTimestamp);\n        this.add_cells(timecell);\n        // Draw the verticalBar\n        this.drawLine(\n            0,\n            this.canvasH,\n            this.canvasW,\n            this.canvasH,\n            this.bottomLineColor,\n            1\n        );\n    }\n\n    /**\n     * Draw add scale\n     * @param  startTimestamp Leftmost time\n     */\n    add_graduations(startTimestamp: number): void {\n        // px/min\n        const pxPerMin = this.canvasW / (this.hoursPerRuler * 60);\n        // px/ms\n        const pxPerMs = this.canvasW / (this.hoursPerRuler * 60 * 60 * 1000);\n        // The default minimum value of PX/steo is 20px\n        let pxPerStep = this.graduationStep;\n\n        // Min/steo\n        let minPerStep = pxPerStep / pxPerMin;\n\n        for (const v of this.minutesPerStep) {\n            if (minPerStep <= v) {\n                // Keep each cell within the range specified by minutesPerStep\n                minPerStep = v;\n                pxPerStep = pxPerMin * minPerStep;\n                break;\n            }\n        }\n        let mediumStep = 30;\n        for (const v of this.minutesPerStep) {\n            if (this.distanceBetweenGtitle / pxPerMin <= v) {\n                mediumStep = v;\n                break;\n            }\n        }\n        // The total number\n        const numSteps = this.canvasW / pxPerStep;\n\n        let graduationLeft: number;\n        let graduationTime: number;\n\n        let caretClass: string;\n        let lineH: number;\n\n        // The initial offset time (ms)\n        const msOffset = this.ms_to_next_step(\n            startTimestamp,\n            minPerStep * 60 * 1000\n        );\n\n        // The initial offset is (px)\n        const pxOffset = msOffset * pxPerMs;\n\n        // ms/step\n        const msPerStep = pxPerStep / pxPerMs;\n\n        for (let i = 0; i < numSteps; i++) {\n            // Distance = offset distance to start + steps *px/ steps\n            graduationLeft = pxOffset + i * pxPerStep;\n\n            // Time = left start time + offset time + steps *ms/ steps\n            graduationTime =\n                Number(startTimestamp) +\n                Number(msOffset) +\n                i * Number(msPerStep);\n\n            const date = new Date(graduationTime);\n            if (date.getUTCHours() === 0 && date.getUTCMinutes() === 0) {\n                caretClass = 'big';\n                lineH = (this.scale * 1.25);\n                const bigDate = DateUtil.formatDate(date, 'HH:mm:ss');\n                this.ctx.textAlign = 'center';\n                this.ctx.fillText(bigDate, graduationLeft, (this.scale * 1.5));\n                this.ctx.fillStyle = this.verticalBarColor;\n            } else if ((graduationTime / (60 * 1000)) % mediumStep === 0) {\n                caretClass = 'middle';\n                lineH = (this.scale * 0.75);\n                const middleDate = DateUtil.formatDate(date, 'HH:mm:ss');\n                this.ctx.textAlign = 'center';\n                this.ctx.fillText(middleDate, graduationLeft, (this.scale * 1.5));\n                this.ctx.fillStyle = this.verticalBarColor;\n            } else {\n                lineH = (this.scale * 0.5);\n            }\n            // drawLine(graduationLeft,0,graduationLeft,lineH,\"rgba(151,158,167,0.4)\",1);\n            this.drawLine(\n                graduationLeft,\n                0,\n                graduationLeft,\n                lineH,\n                this.verticalBarColor,\n                1\n            );\n        }\n    }\n\n    /**\n     * Draw the play button\n     */\n    drawPalyBar(): void {\n        this.ctx.beginPath();\n        this.ctx.moveTo(this.playBarOffsetX, 0);\n        this.ctx.lineTo(this.playBarOffsetX, (this.scale * 1.75));\n        this.ctx.strokeStyle = this.playBarColor;\n        this.ctx.stroke();\n        this.ctx.moveTo(this.playBarOffsetX, (this.scale * 1.75));\n        this.ctx.lineTo(this.playBarOffsetX, (this.scale * 1.75));\n        this.ctx.lineTo(this.playBarOffsetX - (this.scale * 0.6), (this.scale * 2.5));\n        this.ctx.lineTo(this.playBarOffsetX - (this.scale * 0.6), (this.scale * 3.5));\n        this.ctx.lineTo(this.playBarOffsetX + (this.scale * 0.6), (this.scale * 3.5));\n        this.ctx.lineTo(this.playBarOffsetX + (this.scale * 0.6), (this.scale * 2.5));\n        this.ctx.lineTo(this.playBarOffsetX, (this.scale * 1.75));\n        this.ctx.fillStyle = this.playBarColor;\n        this.ctx.fill();\n        this.ctx.closePath();\n        // this.init(this.startTimestamp, this.timecell, false);\n        const time = Number(this.currentTimestamp);\n        this.ctx.fillStyle = this.playBarColor;\n        this.ctx.textAlign = 'center';\n        this.ctx.fillText(\n            DateUtil.formatDate(new Date(time), 'YYYY-MM-DD HH:mm:ss'),\n            this.playBarOffsetX,\n            (this.scale * 4.25)\n        );\n    }\n\n    /**\n     * Draw the line\n     * @param  beginX The X-axis to start with\n     * @param  beginY The Y-axis to start with\n     * @param  endX The end of the X-axis\n     * @param  endY The end of the Y-axis\n     * @param  color color\n     * @param  width width\n     */\n    drawLine(\n        beginX: number,\n        beginY: number,\n        endX: number,\n        endY: number,\n        color: string,\n        width: number\n    ): void {\n        this.ctx.beginPath();\n        this.ctx.moveTo(beginX, beginY);\n        this.ctx.lineTo(endX, endY);\n        this.ctx.strokeStyle = color;\n        this.ctx.lineWidth = width;\n        this.ctx.stroke();\n    }\n\n    /**\n     * Add video segment\n     * @param  cells Video array\n     */\n    add_cells(cells: any): void {\n        cells.forEach((cell: MouseEvent) => {\n            this.draw_cell(cell);\n        });\n    }\n\n    /**\n     * Draw video blocks\n     * @param  cell The cell includes beginTime Ms; The endTime ms; style;\n     */\n    draw_cell(cell: any): void {\n        const pxPerMs = this.canvasW / (this.hoursPerRuler * 60 * 60 * 1000); // px/ms\n        const beginX = (cell.beginTime - this.startTimestamp) * pxPerMs;\n        const cellWidth = (cell.endTime - cell.beginTime) * pxPerMs;\n        this.ctx.fillStyle = cell.style.background;\n        this.ctx.fillRect(beginX, 0, cellWidth, (this.scale * 0.75));\n    }\n\n    /**\n     * Draws the background of the video block\n     */\n    drawCellBg(): void {\n        this.ctx.fillStyle = 'rgba(69, 72, 76, 0.5)';\n        this.ctx.fillRect(0, 0, this.canvasW, 0);\n    }\n\n    /**\n     * Drag/click the Mousedown event\n     */\n    mousedownFunc(e: MouseEvent): void {\n        this.gIsMousedown = true;\n        this.gMousedownCursor = this.get_cursor_x_position(e).posX;\n        this.gMousedownCursorY = this.get_cursor_x_position(e).posY;\n    }\n\n    /**\n     * Drag/mouse hover to display mousemove events\n     */\n    mousemoveFunc(e: MouseEvent): void {\n        this.clearCanvas();\n        const posX = this.get_cursor_x_position(e).posX;\n        const pxPerMs = this.canvasW / (this.hoursPerRuler * 3600 * 1000);\n        const diffX = posX - this.gMousedownCursor;\n        if (this.gIsMousedown) {\n            if (\n                this.gMousedownCursor >= this.playBarOffsetX1 &&\n                this.gMousedownCursor <= this.playBarOffsetX2 &&\n                this.gMousedownCursorY >= this.playBarOffsetY1 &&\n                this.gMousedownCursorY <= this.playBarOffsetY2\n            ) {\n                // this.playBarDistanceLeft = this.playBarOffsetX / this.pxPerMs / 3600 / 1000 / this.hoursPerRuler;\n                // this.playBarOffsetX = posX;\n                // this.playBarOffsetX1 = this.playBarOffsetX - (this.scale * 0.6);\n                // this.playBarOffsetX2 = this.playBarOffsetX + (this.scale * 0.6);\n\n                this.startTimestamp =\n                    this.startTimestamp + Math.round(diffX / pxPerMs);\n\n                this.currentTimestamp =\n                    (this.startTimestamp +\n                        Math.round(this.playBarOffsetX / pxPerMs));\n\n                this.drawPalyBar();\n                this.init(this.startTimestamp, this.timecell, false);\n\n                this.gIsMousemove = true;\n\n            } else {\n                this.startTimestamp =\n                    this.startTimestamp - Math.round(diffX / pxPerMs);\n\n                this.currentTimestamp =\n                    this.startTimestamp +\n                    Math.round(this.playBarOffsetX / pxPerMs);\n\n                this.drawPalyBar();\n                this.init(this.startTimestamp, this.timecell, true);\n\n                this.gIsMousemove = true;\n                this.gMousedownCursor = posX;\n\n            }\n            this.mouseUp.emit(this.currentTimestamp);\n\n        } else {\n\n            const time = this.startTimestamp + posX / pxPerMs;\n\n            this.drawPalyBar();\n            this.init(this.startTimestamp, this.timecell, true);\n            this.drawLine(posX, 0, posX, 50, 'rgb(194, 202, 215)', 1);\n\n            this.ctx.fillStyle = 'rgb(194, 202, 215)';\n            this.ctx.textAlign = 'center';\n            this.ctx.fillText(\n                DateUtil.formatDate(\n                    new Date(time),\n                    'YYYY-MM-DD HH:mm:ss'\n                ),\n                posX,\n                (this.scale * 3)\n            );\n\n        }\n    }\n\n    /**\n     * Drag/click the Mouseup event\n     */\n    mouseupFunc(e: MouseEvent): void {\n        if (this.gIsMousemove) {\n            // Drag events\n            this.gIsMousemove = false;\n            this.gIsMousedown = false;\n            this.playTime =\n                this.startTimestamp + this.hoursPerRuler * this.playBarDistanceLeft * 3600 * 1000;\n        } else {\n            // Click event\n            this.gIsMousedown = false;\n\n            // Mouse distance (px)\n            const posx = this.get_cursor_x_position(e).posX;\n\n            // ms/px\n            const msPerPx = (this.zoom * 3600 * 1000) / this.canvasW;\n\n            this.playTime = this.startTimestamp + posx * msPerPx;\n            this.set_time_to_middle(this.playTime);\n\n        }\n        this.mouseDown.emit(this.playTime);\n    }\n\n    /**\n     * Mouseout of the hidden time mouseout event\n     */\n    mouseoutFunc(): void {\n        this.clearCanvas();\n        // px/ms\n        const pxPerMs = this.canvasW / (this.hoursPerRuler * 3600 * 1000);\n        this.currentTimestamp =\n            this.startTimestamp +\n            Math.round(this.playBarOffsetX / pxPerMs);\n\n        this.drawPalyBar();\n        this.init(this.startTimestamp, this.timecell, true);\n    }\n\n    /**\n     * Scroll to the center of the timeline for the mousewheel event\n     */\n    mousewheelFunc(event: any): boolean {\n        if (event && event.preventDefault) {\n            event.preventDefault();\n        } else {\n            window.event.returnValue = false;\n            return false;\n        }\n\n        const e = window.event || event;\n        const delta = Math.max(-1, Math.min(1, e.wheelDelta || -e.detail));\n\n        // Ms Remember the current middle time\n        const middleTime =\n            this.startTimestamp + (this.hoursPerRuler * this.playBarDistanceLeft * 3600 * 1000);\n        if (delta < 0) {\n            this.zoom = this.zoom + 4;\n            if (this.zoom >= 24) {\n                // Shrink to a minimum of 24 hours\n                this.zoom = 24;\n            }\n            this.hoursPerRuler = this.zoom;\n        } else if (delta > 0) {\n            // amplification\n            this.zoom = this.zoom - 4;\n            if (this.zoom <= 1) {\n                // Zoom in at most one hour\n                this.zoom = 1;\n            }\n            this.hoursPerRuler = this.zoom;\n        }\n\n        this.clearCanvas();\n        // // startTimestamp = current middle time - zoom /2\n        this.startTimestamp =\n            middleTime - (this.hoursPerRuler * 3600 * 1000) / 2;\n\n        this.init(this.startTimestamp, this.timecell, true);\n        this.drawPalyBar();\n    }\n\n    /**\n     * Get the mouse POSx\n     * @param  e event\n     */\n    get_cursor_x_position(e: any): CanvasPos {\n        let posx = 0;\n        let posy = 0;\n\n        if (!e) {\n            e = window.event;\n        }\n        if (e.offsetX || e.offsetY) {\n            posx = e.offsetX;\n            posy = e.offsetY;\n        }\n\n        return { posX: posx, posY: posy };\n    }\n\n    /**\n     * The offset of the left start time, returns the unit ms\n     * @param  timestamp The time stamp\n     * @param  step The offset\n     */\n    ms_to_next_step(timestamp: number, step: number): number {\n        const remainder = timestamp % step;\n        return remainder ? step - remainder : 0;\n    }\n\n    /**\n     * Set the time to jump to the middle red line\n     *  @param  time Unit of ms\n     */\n    set_time_to_middle(time: number): void {\n        if (this.ctx) {\n            this.clearCanvas();\n            this.startTimestamp = time - (this.hoursPerRuler * this.playBarDistanceLeft * 3600 * 1000);\n            this.currentTimestamp = time;\n            this.drawPalyBar();\n            this.init(this.startTimestamp, this.timecell, true);\n        }\n    }\n\n    /**\n     * 清除canvas 每次重新绘制需要先清除\n     */\n    clearCanvas(): void {\n        this.ctx.clearRect(0, 0, this.canvasW, (this.scale * 7.5));\n    }\n    /**\n     * Click to play\n     */\n\n    onPlayClick(): void {\n        // this.setTimeMove = undefined;\n        this.isPlayClick = true;\n        this.setTimeMove = interval(this.speed).subscribe((d: any) => {\n            this.playTime = Number(this.playTime) + 1 * 1000;\n            this.playClick.emit(this.playTime);\n            this.set_time_to_middle(this.playTime);\n        });\n    }\n    /**\n     * Click on the pause\n     */\n    onPauseClick(): void {\n        this.isPlayClick = false;\n        if (this.setTimeMove) {\n            // this.setTimeMove = undefined;\n            this.setTimeMove.unsubscribe();\n            this.playClick.emit(this.playTime);\n        }\n    }\n    /**\n     * Change video segment\n     */\n    changeVideo(): void {\n        const cells: Array<VideoCellType> = [\n            {\n                beginTime: new Date().getTime() - 1 * 1000 * 3600,\n                endTime: new Date().getTime() + 2 * 1000 * 3600,\n                style: {\n                    background: 'rgba(132, 244, 180, 0.498039)'\n                }\n            }\n        ];\n        this.clearCanvas();\n        this.drawPalyBar();\n        this.init(this.startTimestamp, cells, true);\n    }\n\n    /**\n     * Temporary unused\n     * @param event MatDatepickerInputEvent(Date)\n     */\n    selectedTime(event: any): void {\n        const timestamp = new Date(event.value.getTime());\n        this.set_time_to_middle(Number(timestamp));\n    }\n\n    /**\n     * Temporary unused\n     * @param event MouseEvent\n     */\n    onDragStart(e: MouseEvent): boolean {\n        e.preventDefault();\n        return false;\n    }\n\n\n}\n","<canvas #timeline class=\"canvas\" style=\"cursor: pointer;border:1px solid borderColor;background-color: bgColor;\"\n    (dragstart)=\"onDragStart($event)\" (mouseup)=\"mouseupFunc($event)\" (mousewheel)=\"mousewheelFunc($event)\"\n    (mousedown)=\"mousedownFunc($event)\" (mousemove)=\"mousemoveFunc($event)\" (mouseout)=\"mouseoutFunc()\"></canvas>","import { NgModule } from '@angular/core';\nimport { TimelineComponent } from './timeline.component';\n\n\n\n@NgModule({\n    declarations: [TimelineComponent],\n    imports: [\n    ],\n    exports: [TimelineComponent]\n})\nexport class TimelineModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { VideoCellType } from 'projects/timeline/src/lib/timeline.component';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n    title = 'ngx-video-timeline';\n\n    speed: number;\n    canvasHeight: number;\n    startTimeThreshold: number;\n    endTimeThreshold: number;\n    videoCells: VideoCellType[];\n    playTime: Date;\n    isPlayClick: boolean;\n\n    constructor() {\n        this.speed = 10;\n        this.isPlayClick = false;\n        this.canvasHeight = 80;\n        this.startTimeThreshold = new Date().getTime() - 1 * 3600 * 1000;\n        this.endTimeThreshold = new Date().getTime() + 1 * 3600 * 1000;\n        this.videoCells = [];\n        this.playTime = new Date();\n    }\n\n    onPlay(): void {\n\n        this.isPlayClick = true;\n        this.startTimeThreshold = new Date().getTime() - 1 * 3600 * 1000;\n    }\n\n    onPause(): void {\n\n        this.isPlayClick = false;\n        // this.endTimeThreshold = new Date().getTime() + 1 * 3600 * 1000;\n    }\n\n    onPlayClick(date: number): void {\n        // console.log(new Date(date));\n        // this.canvasHeight = 60;\n    }\n\n\n    selectedTime(date: any): void {\n        this.playTime = date.value;\n    }\n\n    changeVideo(): void {\n        this.videoCells = [\n            {\n                beginTime: new Date().getTime() - 1 * 3600 * 1000,\n                endTime: new Date().getTime() + 1 * 3600 * 1000,\n                style: {\n                    background: '#f3e5e4'\n                }\n            }\n        ];\n    }\n\n    ngOnInit(): void {\n    }\n}\n","\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\"  class=\"canvas-box\">\n              <ngx-video-timeline class=\"canvas-class\" [playTime]=\"playTime\" [isPlayClick]=\"isPlayClick\"  [videoCells]=\"videoCells\" [startTimeThreshold]=\"startTimeThreshold\" [endTimeThreshold]=\"endTimeThreshold\"  [canvasHeight]=\"canvasHeight\"  [speed]=\"speed\" (playClick)=\"onPlayClick($event)\" ></ngx-video-timeline>\n          </div>\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n              <div>\n                  <button mat-button (click)=\"onPlay()\">play</button>\n                  <button mat-button (click)=\"onPause()\">pause</button>\n                  <button mat-button (click)=\"changeVideo()\">changeVideos</button>\n                  <!-- <mat-form-field>\n                      <input matInput [matDatepicker]=\"picker\" placeholder=\"选择时间\" (dateChange)=\"selectedTime($event)\">\n                      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                      <mat-datepicker #picker></mat-datepicker>\n                  </mat-form-field> -->\n              </div>\n\n          </div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { TimelineModule } from 'projects/timeline/src/lib/timeline.module';\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        BrowserModule,\n        TimelineModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}